{"version":3,"file":"RealFS.js","sourceRoot":"","sources":["../../../src/backend/RealFS.ts"],"names":[],"mappings":"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","sourcesContent":["import PreloadFile from '../generic/preload_file';\nimport { BaseFileSystem, FileSystem, BFSOneArgCallback, BFSCallback, FileSystemOptions } from '../core/file_system';\nimport { FileFlag } from '../core/file_flag';\nimport { default as Stats, FileType } from '../core/node_fs_stats';\nimport { ApiError, ErrorCode } from '../core/api_error';\nimport { File } from '../core/file';\nimport { each as asyncEach } from 'async';\nimport * as path from 'path';\nimport { arrayBuffer2Buffer, buffer2ArrayBuffer, emptyBuffer, deprecationMessage } from '../core/util';\n/* tslint:disable:member-ordering */\n/* tslint:disable:one-line */\n/* tslint:disable:triple-equals */\n\n/**\n * @hidden\n */\nlet errorCodeLookup: { [errCode: string]: ErrorCode };\n/**\n * Lazily construct error code lookup, since DropboxJS might be loaded *after* BrowserFS (or not at all!)\n * @hidden\n */\nfunction constructErrorCodeLookup() {\n  if (errorCodeLookup) {\n    return;\n  }\n  errorCodeLookup = {};\n  errorCodeLookup[Errors.GENERAL_FAILURE] = ErrorCode.EIO;\n  errorCodeLookup[Errors.CREATION_ERROR] = ErrorCode.EIO;\n  errorCodeLookup[Errors.WRITE_ERROR] = ErrorCode.EIO;\n  errorCodeLookup[Errors.IS_DIR] = ErrorCode.EISDIR;\n  errorCodeLookup[Errors.IS_FILE] = ErrorCode.ENOTDIR;\n  errorCodeLookup[Errors.NO_INPUT] = ErrorCode.EINVAL;\n  errorCodeLookup[Errors.OPEN_ERROR] = ErrorCode.EIO;\n  errorCodeLookup[Errors.OUT_OF_FS] = ErrorCode.EPERM;\n}\n\n/**\n * @hidden\n */\ninterface ICachedPathInfo {\n  stat: Dropbox.File.Stat;\n}\n\n/**\n * @hidden\n */\ninterface ICachedFileInfo extends ICachedPathInfo {\n  contents: ArrayBuffer;\n}\n\n// /**\n//  * @hidden\n//  */\n// function isFileInfo(cache: ICachedPathInfo): cache is ICachedFileInfo {\n//   return cache && cache.stat.isFile;\n// }\n\n/**\n * @hidden\n */\ninterface ICachedDirInfo extends ICachedPathInfo {\n  contents: string[];\n}\n\n// /**\n//  * @hidden\n//  */\n// function isDirInfo(cache: ICachedPathInfo): cache is ICachedDirInfo {\n//   return cache && cache.stat.isFolder;\n// }\n\nconst parseOptions = (input: string) => {\n  const full: { [key: string]: any } = {};\n  const inputSplit = input.split(\"\\n\");\n  for (const element of inputSplit) {\n    if (element.includes(\"=\\\"\")) {\n      const optVal = element.slice(element.indexOf(\"=\") + 1).slice(1).slice(0, -1);\n      const booleanValue = (optVal === \"true\" || optVal === \"false\") ? optVal === \"true\" : undefined;\n      const optKey = element.split(\"=\")[0];\n      full[optKey] = (booleanValue === undefined ? optVal : booleanValue);\n    }\n  }\n  return full;\n};\n\nexport interface RealFsStat { itemType: string; ctime: string; mode: string; size: string; mtime: string; atime: string; };\n\n/**\n * @hidden\n */\nfunction isArrayBuffer(ab: any): ab is ArrayBuffer {\n  // Accept null / undefined, too.\n  return ab === null || ab === undefined || (typeof (ab) === 'object' && typeof (ab['byteLength']) === 'number');\n}\n\nconst Errors = {\n  GENERAL_FAILURE: \"Meta call failed\",\n  IS_FILE: \"Is a file\",\n  IS_DIR: \"Is a dir\",\n  NO_INPUT: \"No input\",\n  OUT_OF_FS: \"Out of scope\",\n  WRITE_ERROR: \"Write error\",\n  OPEN_ERROR: \"Open error\",\n  CREATION_ERROR: \"File didn't exist, creation caused errors\",\n  OK: \"OK\",\n};\n\n/**\n * Wraps a Dropbox client and caches operations.\n * @hidden\n */\nclass RealFSClient {\n  private _cache: { [path: string]: ICachedPathInfo } = {};\n  private _client: Dropbox.Client;\n\n  private _apiUrl: string;\n  constructor(apiUrl: string) {\n    // this._client = client;\n    this._apiUrl = apiUrl;\n  }\n\n  private _makeRequest(kind: \"read\" | \"write\" | \"list\" | \"stat\", filePath: string, callback: (err: Error | null, response?: Response) => void, postData?: ArrayBuffer) {\n    const constructedFullApiUrl = [\n      this._apiUrl,\n    ];\n    let targetMethod = \"\";\n    // const dataToPost = [];\n    const search: { key: string, value: string }[] = [];\n    const appendPath = (path: string) => search.push({ key: \"path\", value: encodeURIComponent(path) });\n    switch (kind) {\n      case \"read\":\n        constructedFullApiUrl.push(\"file\");\n        targetMethod = \"GET\";\n        appendPath(filePath);\n        break;\n      case \"list\":\n        constructedFullApiUrl.push(\"directory\");\n        targetMethod = \"GET\";\n        appendPath(filePath);\n        break;\n      case \"stat\":\n        constructedFullApiUrl.push(\"stat\");\n        targetMethod = \"GET\";\n        appendPath(filePath);\n        break;\n      case \"write\":\n        constructedFullApiUrl.push(\"file\");\n        targetMethod = \"POST\";\n        appendPath(filePath);\n        break;\n      default:\n        throw new Error(\"Unknown operation requested \" + kind);\n    }\n    const req = fetch(constructedFullApiUrl.join(\"/\") + (search.length > 0 ? `?${search.map((x) => `${x.key}=${x.value}`).join(\"&\")}` : \"\"), {\n      method: targetMethod,\n      body: postData,\n    });\n    req.catch((x) => {\n      callback(x);\n    });\n    req.then((x) => {\n      callback(null, x);\n    });\n  }\n\n  public readdir(p: string, cb: (error: Error | null, contents?: string[]) => void): void {\n    /*\n        const cacheInfo = this.getCachedDirInfo(p);\n\n        this._wrap((interceptCb) => {\n          if (cacheInfo !== null && cacheInfo.contents) {\n            this._client.readdir(p, {\n              contentHash: cacheInfo.stat.contentHash\n            }, interceptCb);\n          } else {\n            this._client.readdir(p, interceptCb);\n          }\n        }, (err: Dropbox.ApiError, filenames: string[], stat: Dropbox.File.Stat, folderEntries: Dropbox.File.Stat[]) => {\n          if (err) {\n            if (err.status === Dropbox.ApiError.NO_CONTENT && cacheInfo !== null) {\n              cb(null, cacheInfo.contents.slice(0));\n            } else {\n              cb(err);\n            }\n          } else {\n            this.updateCachedDirInfo(p, stat, filenames.slice(0));\n            folderEntries.forEach((entry) => {\n              this.updateCachedInfo(path.join(p, entry.name), entry);\n            });\n            cb(null, filenames);\n          }\n        });\n    */\n    this._makeRequest(\"list\", p, (err, contents) => {\n      if (err) {\n        cb(err);\n      }\n      else {\n        if (contents == undefined) {\n          return;\n        }\n        if (contents.status != 200) {\n          const convertErrorMsg = (errorMsg: keyof typeof Errors) => new Error(errorMsg);\n          switch (contents.statusText) {\n            case Errors.IS_FILE:\n              cb(convertErrorMsg(\"IS_FILE\"));\n              break;\n            case Errors.OUT_OF_FS:\n              cb(convertErrorMsg(\"OUT_OF_FS\"));\n              break;\n            case Errors.GENERAL_FAILURE:\n              cb(convertErrorMsg(\"GENERAL_FAILURE\"));\n              break;\n            default:\n              break;\n          }\n          return;\n        }\n        else {\n          // cb(null, (await contents.text()).split(\"\\n\"));\n          contents.text().then((x2) => {\n            cb(null, x2.split(\"\\n\").filter((x) => x.length > 0));\n          });\n        }\n      }\n    });\n  }\n\n  public remove(p: string, cb: (error?: Error | null) => void): void {\n    // this._wrap((interceptCb) => {\n    //   this._client.remove(p, interceptCb);\n    // }, (err: Dropbox.ApiError, stat?: Dropbox.File.Stat) => {\n    //   if (!err) {\n    //     this.updateCachedInfo(p, stat!);\n    //   }\n    //   cb(err);\n    // });\n    cb(new Error(\"Unimplemented\"));\n  }\n\n  public move(src: string, dest: string, cb: (error?: Error) => void): void {\n    // this._wrap((interceptCb) => {\n    //   this._client.move(src, dest, interceptCb);\n    // }, (err: Dropbox.ApiError, stat: Dropbox.File.Stat) => {\n    //   if (!err) {\n    //     this.deleteCachedInfo(src);\n    //     this.updateCachedInfo(dest, stat);\n    //   }\n    //   cb(err);\n    // });\n    cb(new Error(\"Unimplemented\"));\n  }\n\n  public stat(p: string, cb: (error: Error | null, stat?: RealFsStat) => void): void {\n    // this._wrap((interceptCb) => {\n    //   this._client.stat(p, interceptCb);\n    // }, (err: Dropbox.ApiError, stat: Dropbox.File.Stat) => {\n    //   if (!err) {\n    //     this.updateCachedInfo(p, stat);\n    //   }\n    //   cb(err, stat);\n    // });\n    // cb(new Error(\"Unimplemented\"));\n    this._makeRequest(\"stat\", p, (err, contents) => {\n      if (err) {\n        cb(err);\n      }\n      else {\n        if (contents == undefined) {\n          return;\n        }\n        if (contents.status != 200) {\n          const convertErrorMsg = (errorMsg: keyof typeof Errors) => new Error(errorMsg);\n          switch (contents.statusText) {\n            case Errors.OUT_OF_FS:\n              cb(convertErrorMsg(\"OUT_OF_FS\"));\n              break;\n            case Errors.GENERAL_FAILURE:\n              cb(convertErrorMsg(\"GENERAL_FAILURE\"));\n              break;\n            default:\n              break;\n          }\n          return;\n        }\n        else {\n          contents.text().then((x2) => {\n            cb(null, parseOptions(x2) as RealFsStat);\n          });\n        }\n      }\n    });\n  }\n\n  public readFile(p: string, cb: (error: Error | null, file?: ArrayBuffer, stat?: RealFsStat) => void): void {\n    // const cacheInfo = this.getCachedFileInfo(p);\n    // if (cacheInfo !== null && cacheInfo.contents !== null) {\n    //   // Try to use cached info; issue a stat to see if contents are up-to-date.\n    //   this.stat(p, (error, stat?) => {\n    //     if (error) {\n    //       cb(error);\n    //     } else if (stat!.contentHash === cacheInfo!.stat.contentHash) {\n    //       // No file changes.\n    //       cb(error, cacheInfo!.contents.slice(0), cacheInfo!.stat);\n    //     } else {\n    //       // File changes; rerun to trigger actual readFile.\n    //       this.readFile(p, cb);\n    //     }\n    //   });\n    // } else {\n    //   this._wrap((interceptCb) => {\n    //     this._client.readFile(p, { arrayBuffer: true }, interceptCb);\n    //   }, (err: Dropbox.ApiError, contents: any, stat: Dropbox.File.Stat) => {\n    //     if (!err) {\n    //       this.updateCachedInfo(p, stat, contents.slice(0));\n    //     }\n    //     cb(err, contents, stat);\n    //   });\n    // }\n    // cb(new Error(\"Unimplemented\"));\n    this._makeRequest(\"read\", p, (err, contents) => {\n      if (err) {\n        cb(err);\n      }\n      else {\n        if (contents == undefined) {\n          return;\n        }\n        if (contents.status != 200) {\n          const convertErrorMsg = (errorMsg: keyof typeof Errors) => new Error(errorMsg);\n          switch (contents.statusText) {\n            case Errors.OUT_OF_FS:\n              cb(convertErrorMsg(\"OUT_OF_FS\"));\n              break;\n            case Errors.GENERAL_FAILURE:\n              cb(convertErrorMsg(\"GENERAL_FAILURE\"));\n              break;\n            default:\n              break;\n          }\n          return;\n        }\n        else {\n          contents.arrayBuffer().then((x2) => {\n            // cb(null, x2, );\n            this.stat(p, (err, stat) => {\n              cb(err, x2, stat);\n            });\n          });\n        }\n      }\n    });\n  }\n\n  public writeFile(p: string, contents: ArrayBuffer, cb: (error: Error | null, stat?: RealFsStat) => void): void {\n    // this._wrap((interceptCb) => {\n    //   this._client.writeFile(p, contents, interceptCb);\n    // }, (err: Dropbox.ApiError, stat: Dropbox.File.Stat) => {\n    //   if (!err) {\n    //     this.updateCachedInfo(p, stat, contents.slice(0));\n    //   }\n    //   cb(err, stat);\n    // });\n    // cb(new Error(\"Unimplemented\"));\n    this._makeRequest(\"write\", p, (err, contents) => {\n      if (err) {\n        cb(err);\n      }\n      else {\n        if (contents == undefined) {\n            return;\n        }\n        if (contents.status != 200) {\n          const convertErrorMsg = (errorMsg: keyof typeof Errors) => new Error(errorMsg);\n          switch (contents.statusText) {\n            case Errors.OPEN_ERROR:\n              cb(convertErrorMsg(\"OPEN_ERROR\"));\n              break;\n            case Errors.WRITE_ERROR:\n              cb(convertErrorMsg(\"WRITE_ERROR\"));\n              break;\n            case Errors.CREATION_ERROR:\n              cb(convertErrorMsg(\"CREATION_ERROR\"));\n              break;\n            case Errors.OUT_OF_FS:\n              cb(convertErrorMsg(\"OUT_OF_FS\"));\n              break;\n            case Errors.GENERAL_FAILURE:\n              cb(convertErrorMsg(\"GENERAL_FAILURE\"));\n              break;\n            default:\n              break;\n          }\n          return;\n        }\n        else {\n          this.stat(p, (err, stat) => {\n            cb(err, stat);\n          });\n        }\n      }\n    }, contents);\n  }\n\n  public mkdir(p: string, cb: (error?: Dropbox.ApiError) => void): void {\n    this._wrap((interceptCb) => {\n      this._client.mkdir(p, interceptCb);\n    }, (err: Dropbox.ApiError, stat: Dropbox.File.Stat) => {\n      if (!err) {\n        this.updateCachedInfo(p, stat, []);\n      }\n      cb(err);\n    });\n  }\n\n  /**\n   * Wraps an operation such that we retry a failed operation 3 times.\n   * Necessary to deal with Dropbox rate limiting.\n   *\n   * @param performOp Function that performs the operation. Will be called up to three times.\n   * @param cb Called when the operation succeeds, fails in a non-temporary manner, or fails three times.\n   */\n  private _wrap(performOp: (interceptCb: (error: Dropbox.ApiError) => void) => void, cb: Function): void {\n    let numRun = 0;\n    const interceptCb = function(error: Dropbox.ApiError): void {\n      // Timeout duration, in seconds.\n      const timeoutDuration: number = 2;\n      if (error && 3 > (++numRun)) {\n        switch (error.status) {\n          case Dropbox.ApiError.SERVER_ERROR:\n          case Dropbox.ApiError.NETWORK_ERROR:\n          case Dropbox.ApiError.RATE_LIMITED:\n            setTimeout(() => {\n              performOp(interceptCb);\n            }, timeoutDuration * 1000);\n            break;\n          default:\n            cb.apply(null, arguments);\n            break;\n        }\n      } else {\n        cb.apply(null, arguments);\n      }\n    };\n\n    performOp(interceptCb);\n  }\n\n  private getCachedInfo(p: string): ICachedPathInfo {\n    return this._cache[p.toLowerCase()];\n  }\n\n  private putCachedInfo(p: string, cache: ICachedPathInfo): void {\n    this._cache[p.toLowerCase()] = cache;\n  }\n\n  // private deleteCachedInfo(p: string): void {\n  //   delete this._cache[p.toLowerCase()];\n  // }\n\n  // private getCachedDirInfo(p: string): ICachedDirInfo | null {\n  //   const info = this.getCachedInfo(p);\n  //   if (isDirInfo(info)) {\n  //     return info;\n  //   } else {\n  //     return null;\n  //   }\n  // }\n\n  // private getCachedFileInfo(p: string): ICachedFileInfo | null {\n  //   const info = this.getCachedInfo(p);\n  //   if (isFileInfo(info)) {\n  //     return info;\n  //   } else {\n  //     return null;\n  //   }\n  // }\n\n  private updateCachedDirInfo(p: string, stat: Dropbox.File.Stat, contents: string[] | null = null): void {\n    const cachedInfo = this.getCachedInfo(p);\n    // Dropbox uses the *contentHash* property for directories.\n    // Ignore stat objects w/o a contentHash defined; those actually exist!!!\n    // (Example: readdir returns an array of stat objs; stat objs for dirs in that context have no contentHash)\n    if (stat.contentHash !== null && (cachedInfo === undefined || cachedInfo.stat.contentHash !== stat.contentHash)) {\n      this.putCachedInfo(p, <ICachedDirInfo> {\n        stat: stat,\n        contents: contents\n      });\n    }\n  }\n  // \"dist\": \"npm-run-all build lint script:make_dist dist:build:node\",\n  private updateCachedFileInfo(p: string, stat: Dropbox.File.Stat, contents: ArrayBuffer | null = null): void {\n    const cachedInfo = this.getCachedInfo(p);\n    // Dropbox uses the *versionTag* property for files.\n    // Ignore stat objects w/o a versionTag defined.\n    if (stat.versionTag !== null && (cachedInfo === undefined || cachedInfo.stat.versionTag !== stat.versionTag)) {\n      this.putCachedInfo(p, <ICachedFileInfo> {\n        stat: stat,\n        contents: contents\n      });\n    }\n  }\n\n  private updateCachedInfo(p: string, stat: Dropbox.File.Stat, contents: ArrayBuffer | string[] | null = null): void {\n    if (stat.isFile && isArrayBuffer(contents)) {\n      this.updateCachedFileInfo(p, stat, contents);\n    } else if (stat.isFolder && Array.isArray(contents)) {\n      this.updateCachedDirInfo(p, stat, contents);\n    }\n  }\n}\n// \"build\": \"npm-run-all --parallel build:tsc build:scripts --sequential build:rollup --parallel build:webpack build:webpack-release\",\n\nexport class RealFile extends PreloadFile<RealFileSystem> implements File {\n  constructor(_fs: RealFileSystem, _path: string, _flag: FileFlag, _stat: Stats, contents?: Buffer) {\n    super(_fs, _path, _flag, _stat, contents);\n  }\n\n  public sync(cb: BFSOneArgCallback): void {\n    if (this.isDirty()) {\n      const buffer = this.getBuffer(),\n        arrayBuffer = buffer2ArrayBuffer(buffer);\n      this._fs._writeFileStrict(this.getPath(), arrayBuffer, (e?: ApiError) => {\n        if (!e) {\n          this.resetDirty();\n        }\n        cb(e);\n      });\n    } else {\n      cb();\n    }\n  }\n\n  public close(cb: BFSOneArgCallback): void {\n    this.sync(cb);\n  }\n}\n\n/**\n * Options for the Dropbox file system.\n */\nexport interface DropboxFileSystemOptions {\n  // An *authenticated* Dropbox client. Must be from the 0.10 JS SDK.\n  // client: Dropbox.Client;\n\n  apiUrl: string;\n}\n\n/**\n * A read/write file system backed by Dropbox cloud storage.\n *\n * Uses the Dropbox V1 API.\n *\n * NOTE: You must use the v0.10 version of the [Dropbox JavaScript SDK](https://www.npmjs.com/package/dropbox).\n */\nexport default class RealFileSystem extends BaseFileSystem implements FileSystem {\n  public static readonly Name = \"Dropbox\";\n\n  public static readonly Options: FileSystemOptions = {\n    // client: {\n    //   type: \"object\",\n    //   description: \"An *authenticated* Dropbox client. Must be from the 0.10 JS SDK.\",\n    //   validator: (opt: Dropbox.Client, cb: BFSOneArgCallback): void => {\n    //     if (opt.isAuthenticated && opt.isAuthenticated()) {\n    //       cb();\n    //     } else {\n    //       cb(new ApiError(ErrorCode.EINVAL, `'client' option must be an authenticated Dropbox client from the v0.10 JS SDK.`));\n    //     }\n    //   }\n    // }\n    apiUrl: {\n      type: \"string\",\n      description: \"API endpoint that contains the RealFS server\"\n    }\n  };\n\n  /**\n   * Creates a new DropboxFileSystem instance with the given options.\n   * Must be given an *authenticated* DropboxJS client from the old v0.10 version of the Dropbox JS SDK.\n   */\n  public static Create(opts: DropboxFileSystemOptions, cb: BFSCallback<RealFileSystem>): void {\n    cb(null, new RealFileSystem(opts.apiUrl, false));\n  }\n\n  public static isAvailable(): boolean {\n    // Checks if the Dropbox library is loaded.\n    return typeof Dropbox !== 'undefined';\n  }\n\n  // The Dropbox client.\n  private _client: RealFSClient;\n\n  /**\n   * **Deprecated. Please use Dropbox.Create() method instead.**\n   *\n   * Constructs a Dropbox-backed file system using the *authenticated* DropboxJS client.\n   *\n   * Note that you must use the old v0.10 version of the Dropbox JavaScript SDK.\n   */\n  constructor(apiUrl: string, deprecateMsg = true) {\n    super();\n    this._client = new RealFSClient(apiUrl);\n    deprecationMessage(deprecateMsg, RealFileSystem.Name, { client: \"authenticated dropbox client instance\" });\n    constructErrorCodeLookup();\n  }\n\n  public getName(): string {\n    return RealFileSystem.Name;\n  }\n\n  public isReadOnly(): boolean {\n    return false;\n  }\n\n  // Dropbox doesn't support symlinks, properties, or synchronous calls\n\n  public supportsSymlinks(): boolean {\n    return false;\n  }\n\n  public supportsProps(): boolean {\n    return false;\n  }\n\n  public supportsSynch(): boolean {\n    return false;\n  }\n\n  public empty(mainCb: BFSOneArgCallback): void {\n    this._client.readdir('/', (error, files) => {\n      if (error) {\n        mainCb(this.convert(error.message, '/'));\n      } else {\n        const deleteFile = (file: string, cb: BFSOneArgCallback) => {\n          const p = path.join('/', file);\n          this._client.remove(p, (err) => {\n            cb(err ? this.convert(err.message, p) : null);\n          });\n        };\n        const finished = (err?: ApiError) => {\n          if (err) {\n            mainCb(err);\n          } else {\n            mainCb();\n          }\n        };\n        // XXX: <any> typing is to get around overly-restrictive ErrorCallback typing.\n        asyncEach(files!, <any> deleteFile, <any> finished);\n      }\n    });\n  }\n\n  public rename(oldPath: string, newPath: string, cb: BFSOneArgCallback): void {\n    // this._client.move(oldPath, newPath, (error) => {\n    //   if (error) {\n    //     // the move is permitted if newPath is a file.\n    //     // Check if this is the case, and remove if so.\n    //     this._client.stat(newPath, (error2, stat) => {\n    //       if (error2 || stat!.isFolder) {\n    //         const missingPath = (<any>error.response).error.indexOf(oldPath) > -1 ? oldPath : newPath;\n    //         cb(this.convert(error, missingPath));\n    //       } else {\n    //         // Delete file, repeat rename.\n    //         this._client.remove(newPath, (error2) => {\n    //           if (error2) {\n    //             cb(this.convert(error2, newPath));\n    //           } else {\n    //             this.rename(oldPath, newPath, cb);\n    //           }\n    //         });\n    //       }\n    //     });\n    //   } else {\n    //     cb();\n    //   }\n    // });\n    cb(this.convert(Errors.GENERAL_FAILURE));\n  }\n\n  public stat(path: string, isLstat: boolean, cb: BFSCallback<Stats>): void {\n    // Ignore lstat case -- Dropbox doesn't support symlinks\n    // Stat the file\n    this._client.stat(path, (error, stat) => {\n      if (error) {\n        cb(this.convert(error.message, path));\n        // } else if (stat && stat.isRemoved) {\n        //   // Dropbox keeps track of deleted files, so if a file has existed in the\n        //   // past but doesn't any longer, you wont get an error\n        //   cb(ApiError.FileError(ErrorCode.ENOENT, path));\n      } else {\n        const stats = new Stats(\n          this._statType(stat!),\n          parseInt(stat!.size, 10),\n          parseInt(stat!.mode, 10),\n          new Date(parseInt(stat!.atime, 10) * 1000),\n          new Date(parseInt(stat!.atime, 10) * 1000),\n          new Date(parseInt(stat!.ctime, 10) * 1000),\n        );\n        return cb(null, stats);\n      }\n    });\n  }\n\n  public open(path: string, flags: FileFlag, mode: number, cb: BFSCallback<File>): void {\n    // Try and get the file's contents\n    this._client.readFile(path, (error, content, dbStat) => {\n      if (error) {\n        // If the file's being opened for reading and doesn't exist, return an\n        // error\n        if (flags.isReadable()) {\n          cb(this.convert(error.message, path));\n        } else {\n          switch (error.message) {\n            // If it's being opened for writing or appending, create it so that\n            // it can be written to\n            case \"GENERAL_FAILURE\":\n              const ab = new ArrayBuffer(0);\n              return this._writeFileStrict(path, ab, (error2: ApiError, stat?: RealFsStat) => {\n                if (error2) {\n                  cb(error2);\n                } else {\n                  const file = this._makeFile(path, flags, stat!, arrayBuffer2Buffer(ab));\n                  cb(null, file);\n                }\n              });\n            default:\n          return cb(this.convert(error.message, path));\n          }\n        }\n      } else {\n        // No error\n        let buffer: Buffer;\n        // Dropbox.js seems to set `content` to `null` rather than to an empty\n        // buffer when reading an empty file. Not sure why this is.\n        if (content === null) {\n          buffer = emptyBuffer();\n        } else {\n          buffer = arrayBuffer2Buffer(content!);\n        }\n        const file = this._makeFile(path, flags, dbStat!, buffer);\n        return cb(null, file);\n      }\n    });\n  }\n\n  public _writeFileStrict(p: string, data: ArrayBuffer, cb: BFSCallback<RealFsStat>): void {\n    const parent = path.dirname(p);\n    this.stat(parent, false, (error: ApiError, stat?: Stats): void => {\n      if (error) {\n        cb(ApiError.FileError(ErrorCode.ENOENT, parent));\n      } else {\n        this._client.writeFile(p, data, (error2, stat) => {\n          if (error2) {\n            cb(this.convert(error2.message, p));\n          } else {\n            cb(null, stat);\n          }\n        });\n      }\n    });\n  }\n\n  /**\n   * Private\n   * Returns a BrowserFS object representing the type of a Dropbox.js stat object\n   */\n  public _statType(stat: RealFsStat): FileType {\n    return parseInt(stat.itemType, 10);\n  }\n\n  /**\n   * Private\n   * Returns a BrowserFS object representing a File, created from the data\n   * returned by calls to the Dropbox API.\n   */\n  public _makeFile(path: string, flag: FileFlag, stat: RealFsStat, buffer: Buffer): RealFile {\n    // const type = /*this._statType(stat); TODO*/ FileType.FILE;\n    const type = this._statType(stat);\n    const stats = new Stats(type, parseInt(stat.size, 10));\n    return new RealFile(this, path, flag, stats, buffer);\n  }\n\n  /**\n   * Private\n   * Delete a file or directory from Dropbox\n   * isFile should reflect which call was made to remove the it (`unlink` or\n   * `rmdir`). If this doesn't match what's actually at `path`, an error will be\n   * returned\n   */\n  public _remove(path: string, cb: BFSOneArgCallback, isFile: boolean): void {\n    this._client.stat(path, (error, stat) => {\n      if (error) {\n        cb(this.convert(error.message, path));\n      } else {\n        if (this._statType(stat!) == FileType.FILE && !isFile) {\n          cb(ApiError.FileError(ErrorCode.ENOTDIR, path));\n        } else if (!(this._statType(stat!) == FileType.FILE) && isFile) {\n          cb(ApiError.FileError(ErrorCode.EISDIR, path));\n        } else {\n          this._client.remove(path, (error) => {\n            if (error) {\n              cb(this.convert(error.message, path));\n            } else {\n              cb(null);\n            }\n          });\n        }\n      }\n    });\n  }\n\n  /**\n   * Delete a file\n   */\n  public unlink(path: string, cb: BFSOneArgCallback): void {\n    this._remove(path, cb, true);\n  }\n\n  /**\n   * Delete a directory\n   */\n  public rmdir(path: string, cb: BFSOneArgCallback): void {\n    this._remove(path, cb, false);\n  }\n\n  /**\n   * Create a directory\n   */\n  public mkdir(p: string, mode: number, cb: BFSOneArgCallback): void {\n    // Dropbox.js' client.mkdir() behaves like `mkdir -p`, i.e. it creates a\n    // directory and all its ancestors if they don't exist.\n    // Node's fs.mkdir() behaves like `mkdir`, i.e. it throws an error if an attempt\n    // is made to create a directory without a parent.\n    // To handle this inconsistency, a check for the existence of `path`'s parent\n    // must be performed before it is created, and an error thrown if it does\n    // not exist\n    const parent = path.dirname(p);\n    this._client.stat(parent, (error, stat) => {\n      if (error) {\n        cb(this.convert(error.message, parent));\n      } else {\n        this._client.mkdir(p, (error) => {\n          if (error) {\n            cb(ApiError.FileError(ErrorCode.EEXIST, p));\n          } else {\n            cb(null);\n          }\n        });\n      }\n    });\n  }\n\n  /**\n   * Get the names of the files in a directory\n   */\n  public readdir(path: string, cb: BFSCallback<string[]>): void {\n    this._client.readdir(path, (error, files) => {\n      if (error) {\n        return cb(this.convert(error.message));\n      } else {\n        return cb(null, files);\n      }\n    });\n  }\n\n  /**\n   * Converts a Dropbox-JS error into a BFS error.\n   */\n  public convert(err: string, path: string | null = null): ApiError {\n    let errorCode = errorCodeLookup[err];\n    if (errorCode === undefined) {\n      errorCode = ErrorCode.EIO;\n    }\n\n    if (!path) {\n      return new ApiError(errorCode);\n    } else {\n      return ApiError.FileError(errorCode, path);\n    }\n  }\n}\n"]}